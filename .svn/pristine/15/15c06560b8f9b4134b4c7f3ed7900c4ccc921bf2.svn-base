package jehc.zxmodules.web;
import java.util.List;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import org.springframework.ui.Model;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.time.DateFormatUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.github.pagehelper.PageInfo;
import jehc.xtmodules.xtcore.base.BaseAction;
import jehc.xtmodules.xtcore.base.BaseSearch;
import jehc.xtmodules.xtcore.util.excel.poi.ExportExcel;
import jehc.xtmodules.xtcore.util.UUID;
import jehc.zxmodules.model.ZxOffice;
import jehc.zxmodules.model.ZxOfficeClassify;
import jehc.zxmodules.service.ZxOfficeClassifyService;
import jehc.zxmodules.service.ZxOfficeService;

/**
* 办公用品管理 
* 2018-01-11 13:16:08  季建吉
*/
@Controller
@RequestMapping("/zxOfficeController")
public class ZxOfficeController extends BaseAction{
	@Autowired
	private ZxOfficeService zxOfficeService;
	@Autowired
	private ZxOfficeClassifyService zxOfficeClassifyService;
	/**
	* 载入初始化页面
	* @param zx_office 
	* @param request 
	* @return
	*/
	@RequestMapping(value="/loadZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public ModelAndView loadZxOffice(ZxOffice zxOffice,HttpServletRequest request){
		return new ModelAndView("pc/zx-view/zx-office/zx-office-list");
	}
	/**
	* 加载初始化列表数据并分页
	* @param zx_office 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/getZxOfficeListByCondition",method={RequestMethod.POST,RequestMethod.GET})
	public String getZxOfficeListByCondition(BaseSearch baseSearch,HttpServletRequest request){
		Map<String, Object> condition = baseSearch.convert();
		commonHPager(condition,request);
		List<ZxOffice> zxOfficeList = null;
		String classify_id=(String) condition.get("classify_id");
		if(condition.get("classify_id")!=null){
			zxOfficeList=zxOfficeService.getZxOfficeInventoryClick((String) condition.get("classify_id"));
		}else{
			zxOfficeList = zxOfficeService.getZxOfficeListByCondition(condition);
			
		}
		PageInfo<ZxOffice> page = new PageInfo<ZxOffice>(zxOfficeList);
		return outPageBootStr(page,request);
	}
	/**
	* 获取对象
	* @param office_id 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/getZxOfficeById",method={RequestMethod.POST,RequestMethod.GET})
	public String getZxOfficeById(String office_id,HttpServletRequest request){
		ZxOffice zxOffice = zxOfficeService.getZxOfficeById(office_id);
		return outDataStr(zxOffice);
	}
	/**
	* 添加
	* @param zx_office 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/addZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public String addZxOffice(ZxOffice zxOffice,HttpServletRequest request){
		int i = 0;
		if(null != zxOffice && !"".equals(zxOffice)){
			zxOffice.setOffice_id(UUID.toUUID());
			zxOffice.setCreate_date(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"));
			i=zxOfficeService.addZxOffice(zxOffice);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}
	}
	/**
	* 添加分类
	* @param zx_office 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/addZxOfficeClassfy",method={RequestMethod.POST,RequestMethod.GET})
	public String addZxOfficeClassfy(ZxOfficeClassify zxOfficeClassify,HttpServletRequest request){
		/*int i = 0;
		if(null != zxOffice && !"".equals(zxOffice)){
			zxOffice.setOffice_id(UUID.toUUID());
			zxOffice.setCreate_date(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"));
			i=zxOfficeService.addZxOffice(zxOffice);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}*/
		int i = 0;
		int j=0;
		//读取分类
		if(zxOfficeClassifyService.getZxOfficeClassifyByParent(zxOfficeClassify)){
			if(null != zxOfficeClassify && !"".equals(zxOfficeClassify)){
				zxOfficeClassify.setClassify_id(UUID.toUUID());
				zxOfficeClassify.setClassify_time(DateFormatUtils.format(new Date(), "yyyy-MM-dd HH:mm:ss"));
				zxOfficeClassify.setClassify_leaf("1");
				i=zxOfficeClassifyService.addZxOfficeClassify(zxOfficeClassify);
				if(!"0".equals(zxOfficeClassify.getClassify_parentId())){
					//子页修改为0
					j=zxOfficeClassifyService.updateZxOfficeClassifyLeaf(zxOfficeClassify);
				}
				else{
					j=1;
				}
				
			}
		}else{
			j=4;
		}
		
		if(i>0&&j==1){
			return outAudStr(true);
		}else if(j==4){
			return "{success:false,msg:'分类不能同名',responseFlag:false}";
		}else{
			return outAudStr(false);
		}
	}
	/**
	* 修改
	* @param zx_office 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/updateZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public String updateZxOffice(ZxOffice zxOffice,HttpServletRequest request){
		int i = 0;
		if(null != zxOffice && !"".equals(zxOffice)){
			i=zxOfficeService.updateZxOffice(zxOffice);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}
	}
	/**
	* 删除
	* @param office_id 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/delZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public String delZxOffice(String office_id,HttpServletRequest request){
		int i = 0;
		if(null != office_id && !"".equals(office_id)){
			Map<String, Object> condition = new HashMap<String, Object>();
			condition.put("office_id",office_id.split(","));
			i=zxOfficeService.delZxOffice(condition);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}
	}
	
	/**
	* 删除
	* @param office_id 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/delZxOfficeClassify",method={RequestMethod.POST,RequestMethod.GET})
	public String delZxOfficeClassify(String classify_id,HttpServletRequest request){
		int i = 0;
		if(null != classify_id && !"".equals(classify_id)){
			Map<String, Object> condition = new HashMap<String, Object>();
			condition.put("classify_id",classify_id.split(","));
			i=zxOfficeClassifyService.delZxOfficeClassify(condition);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}
	}
	/**
	* 复制一行并生成记录
	* @param office_id 
	* @param request 
	*/
	@ResponseBody
	@RequestMapping(value="/copyZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public String copyZxOffice(String office_id,HttpServletRequest request){
		int i = 0;
		ZxOffice zxOffice = zxOfficeService.getZxOfficeById(office_id);
		if(null != zxOffice && !"".equals(zxOffice)){
			zxOffice.setOffice_id(UUID.toUUID());
			i=zxOfficeService.addZxOffice(zxOffice);
		}
		if(i>0){
			return outAudStr(true);
		}else{
			return outAudStr(false);
		}
	}
	/**
	* 导出
	* @param excleData 
	* @param excleHeader 
	* @param excleText 
	* @param request 
	* @param request 
	*/
	@RequestMapping(value="/exportZxOffice",method={RequestMethod.POST,RequestMethod.GET})
	public void exportZxOffice(String excleData,String excleHeader,String excleText,HttpServletRequest request,HttpServletResponse response){
		ExportExcel exportExcel = new ExportExcel();
		exportExcel.exportExcel(excleData, excleHeader,excleText,response);
	}
	/**
	* 发送至新增页面
	* @param request 
	*/
	@RequestMapping(value="/toZxOfficeAdd",method={RequestMethod.POST,RequestMethod.GET})
	public ModelAndView toZxOfficeAdd(ZxOffice zxOffice,HttpServletRequest request){
		return new ModelAndView("pc/zx-view/zx-office/zx-office-add");
	}
	/**
	* 发送至新增页面
	* @param request 
	*/
	@RequestMapping(value="/toZxOfficeClassifyAdd",method={RequestMethod.POST,RequestMethod.GET})
	public ModelAndView toZxOfficeClassifyAdd(ZxOffice zxOffice,HttpServletRequest request){
		return new ModelAndView("pc/zx-view/zx-office/zx-office-classify-add");
	}
	/**
	* 发送至编辑页面
	* @param request 
	*/
	@RequestMapping(value="/toZxOfficeUpdate",method={RequestMethod.POST,RequestMethod.GET})
	public ModelAndView toZxOfficeUpdate(String office_id,HttpServletRequest request, Model model){
		ZxOffice zxOffice = zxOfficeService.getZxOfficeById(office_id);
		model.addAttribute("zxOffice", zxOffice);
		return new ModelAndView("pc/zx-view/zx-office/zx-office-update");
	}
	/**
	* 发送至明细页面
	* @param request 
	*/
	@RequestMapping(value="/toZxOfficeDetail",method={RequestMethod.POST,RequestMethod.GET})
	public ModelAndView toZxOfficeDetail(String office_id,HttpServletRequest request, Model model){
		ZxOffice zxOffice = zxOfficeService.getZxOfficeById(office_id);
		model.addAttribute("zxOffice", zxOffice);
		return new ModelAndView("pc/zx-view/zx-office/zx-office-detail");
	}
}
